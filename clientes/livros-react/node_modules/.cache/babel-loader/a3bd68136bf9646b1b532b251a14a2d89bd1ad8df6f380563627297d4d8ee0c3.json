{"ast":null,"code":"import { Livro } from '../modelo/Livro';\nconst baseURL = \"http://localhost:3030/livros\";\nclass ControleLivros {\n  constructor() {}\n  async obterLivros() {\n    const response = await fetch(baseURL, {\n      method: 'GET'\n    });\n    const livrosMongo = await response.json();\n    return livrosMongo.map(livroMongo => new Livro(livroMongo._id || '', livroMongo.codEditora, livroMongo.titulo, livroMongo.resumo, livroMongo.autores));\n  }\n  async incluir(novoLivro) {\n    const livroMongo = {\n      _id: null,\n      codEditora: novoLivro.codEditora,\n      titulo: novoLivro.titulo,\n      resumo: novoLivro.resumo,\n      autores: novoLivro.autores\n    };\n    const response = await fetch(baseURL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(livroMongo)\n    });\n    return response.ok;\n  }\n\n  // Método para excluir um livro\n  async excluir(codigoLivro) {\n    const response = await fetch(`${baseURL}/${codigoLivro}`, {\n      method: 'DELETE'\n    });\n    return response.ok;\n  }\n}\nexport { ControleLivros };","map":{"version":3,"names":["Livro","baseURL","ControleLivros","constructor","obterLivros","response","fetch","method","livrosMongo","json","map","livroMongo","_id","codEditora","titulo","resumo","autores","incluir","novoLivro","headers","body","JSON","stringify","ok","excluir","codigoLivro"],"sources":["C:/Users/joao_/quinto-procedimento/nivel-5-acessar-banco/livro-servidor/clientes/livros-react/src/controle/ControleLivros.ts"],"sourcesContent":["import { Livro } from '../modelo/Livro';\r\n\r\n\r\nconst baseURL = \"http://localhost:3030/livros\";\r\n\r\n\r\ninterface LivroMongo {\r\n    _id: string | null;\r\n    codEditora: number;\r\n    titulo: string;\r\n    resumo: string;\r\n    autores: string[];\r\n}\r\n\r\nclass ControleLivros {\r\n    constructor() { }\r\n\r\n    async obterLivros(): Promise<Livro[]> {\r\n        const response = await fetch(baseURL, { method: 'GET' });\r\n        const livrosMongo: LivroMongo[] = await response.json();\r\n\r\n        return livrosMongo.map(livroMongo => new Livro(\r\n            livroMongo._id || '',\r\n            livroMongo.codEditora,\r\n            livroMongo.titulo,\r\n            livroMongo.resumo,\r\n            livroMongo.autores\r\n        ));\r\n    }\r\n\r\n\r\n    async incluir(novoLivro: Livro): Promise<boolean> {\r\n        const livroMongo: LivroMongo = {\r\n            _id: null,\r\n            codEditora: novoLivro.codEditora,\r\n            titulo: novoLivro.titulo,\r\n            resumo: novoLivro.resumo,\r\n            autores: novoLivro.autores\r\n        };\r\n\r\n        const response = await fetch(baseURL, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(livroMongo)\r\n        });\r\n\r\n        return response.ok;\r\n    }\r\n\r\n    // Método para excluir um livro\r\n    async excluir(codigoLivro: string): Promise<boolean> {\r\n        const response = await fetch(`${baseURL}/${codigoLivro}`, {\r\n            method: 'DELETE'\r\n        });\r\n\r\n        return response.ok;\r\n    }\r\n}\r\n\r\nexport { ControleLivros };\r\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,iBAAiB;AAGvC,MAAMC,OAAO,GAAG,8BAA8B;AAW9C,MAAMC,cAAc,CAAC;EACjBC,WAAWA,CAAA,EAAG,CAAE;EAEhB,MAAMC,WAAWA,CAAA,EAAqB;IAClC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,OAAO,EAAE;MAAEM,MAAM,EAAE;IAAM,CAAC,CAAC;IACxD,MAAMC,WAAyB,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAEvD,OAAOD,WAAW,CAACE,GAAG,CAACC,UAAU,IAAI,IAAIX,KAAK,CAC1CW,UAAU,CAACC,GAAG,IAAI,EAAE,EACpBD,UAAU,CAACE,UAAU,EACrBF,UAAU,CAACG,MAAM,EACjBH,UAAU,CAACI,MAAM,EACjBJ,UAAU,CAACK,OACf,CAAC,CAAC;EACN;EAGA,MAAMC,OAAOA,CAACC,SAAgB,EAAoB;IAC9C,MAAMP,UAAsB,GAAG;MAC3BC,GAAG,EAAE,IAAI;MACTC,UAAU,EAAEK,SAAS,CAACL,UAAU;MAChCC,MAAM,EAAEI,SAAS,CAACJ,MAAM;MACxBC,MAAM,EAAEG,SAAS,CAACH,MAAM;MACxBC,OAAO,EAAEE,SAAS,CAACF;IACvB,CAAC;IAED,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAACL,OAAO,EAAE;MAClCM,MAAM,EAAE,MAAM;MACdY,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,UAAU;IACnC,CAAC,CAAC;IAEF,OAAON,QAAQ,CAACkB,EAAE;EACtB;;EAEA;EACA,MAAMC,OAAOA,CAACC,WAAmB,EAAoB;IACjD,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,IAAIwB,WAAW,EAAE,EAAE;MACtDlB,MAAM,EAAE;IACZ,CAAC,CAAC;IAEF,OAAOF,QAAQ,CAACkB,EAAE;EACtB;AACJ;AAEA,SAASrB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}